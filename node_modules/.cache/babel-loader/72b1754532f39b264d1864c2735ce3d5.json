{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6 offset-md-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Edit Task\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"exampleInputEmail1\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"small\", {\n  id: \"emailHelp\",\n  class: \"form-text text-muted\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"exampleInputPassword1\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"exampleInputPassword1\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn btn-primary\"\n}, \"Update Task\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.updateTask && $options.updateTask(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Enter Task Name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.taskInfo.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskInfo.name]]), _hoisted_7]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"Description\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.taskInfo.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskInfo.description]])]), _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control mb-2\",\n    placeholder: \"Category\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.taskInfo.category = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.taskInfo.category]])]), _hoisted_12], 32 /* HYDRATE_EVENTS */)])])])]);\n}","map":{"version":3,"mappings":";;EAESA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAsB;gCAC/BC,oBAAkB,YAAd,WAAS;;EAEND,KAAK,EAAC;AAAY;gCACrBC,oBAAwC;EAAjCC,GAAG,EAAC;AAAoB;gCAO/BD,oBAA2D;EAApDE,EAAE,EAAC,WAAW;EAACH,KAAK,EAAC;;;EAEzBA,KAAK,EAAC;AAAY;gCACrBC,oBAA2C;EAApCC,GAAG,EAAC;AAAuB;;EAQ/BF,KAAK,EAAC;AAAY;iCACrBC,oBAA2C;EAApCC,GAAG,EAAC;AAAuB;iCAQpCD,oBAAoD;EAA5CD,KAAK,EAAC;AAAiB,GAAC,aAAW;;;uBAlCrDI,oBAuCM,cAtCJH,oBAqCM,OArCNI,UAqCM,GApCJJ,oBAmCM,OAnCNK,UAmCM,GAlCJL,oBAiCM,OAjCNM,UAiCM,GAhCJC,UAAkB,EAClBP,oBA8BO;IA9BAQ,QAAM,wDAAUC,mDAAU;MAC/BT,oBASM,OATNU,UASM,GARJC,UAAwC,kBACxCX,oBAKE;IAJAY,IAAI,EAAC,MAAM;IACXb,KAAK,EAAC,cAAc;IACpBc,WAAW,EAAC,iBAAiB;+DACpBC,cAAQ,CAACC,IAAI;iDAAbD,cAAQ,CAACC,IAAI,KAExBC,UAA2D,IAE7DhB,oBAQM,OARNiB,UAQM,GAPJC,UAA2C,kBAC3ClB,oBAKE;IAJAY,IAAI,EAAC,MAAM;IACXb,KAAK,EAAC,cAAc;IACpBc,WAAW,EAAC,aAAa;+DAChBC,cAAQ,CAACK,WAAW;iDAApBL,cAAQ,CAACK,WAAW,OAGjCnB,oBAQM,OARNoB,WAQM,GAPJC,WAA2C,kBAC3CrB,oBAKE;IAJAY,IAAI,EAAC,MAAM;IACXb,KAAK,EAAC,mBAAmB;IACzBc,WAAW,EAAC,UAAU;+DACbC,cAAQ,CAACQ,QAAQ;iDAAjBR,cAAQ,CAACQ,QAAQ,OAG9BC,WAAoD","names":["class","_createElementVNode","for","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","$options","_hoisted_5","_hoisted_6","type","placeholder","$data","name","_hoisted_7","_hoisted_8","_hoisted_9","description","_hoisted_10","_hoisted_11","category","_hoisted_12"],"sourceRoot":"","sources":["/Users/rileyspencer/projecttask/src/views/EditTask.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n          <h2>Edit Task</h2>\n          <form @submit.prevent=\"updateTask\">\n            <div class=\"form-group\">\n              <label for=\"exampleInputEmail1\"></label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Enter Task Name\"\n                v-model=\"taskInfo.name\"\n              />\n              <small id=\"emailHelp\" class=\"form-text text-muted\"></small>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\"></label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Description\"\n                v-model=\"taskInfo.description\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"exampleInputPassword1\"></label>\n              <input\n                type=\"text\"\n                class=\"form-control mb-2\"\n                placeholder=\"Category\"\n                v-model=\"taskInfo.category\"\n              />\n            </div>\n            <button class=\"btn btn-primary\">Update Task</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport taskColRef from \"../firebase\";\nimport { getDoc, doc, setDoc } from \"firebase/firestore\";\nexport default {\n  data() {\n    return {\n      selectedTask: {},\n      taskId: null,\n      docRef: null,\n      taskInfo: {\n        name:null,\n      description:null,\n      category:null,\n      }\n    };\n  },\n  methods: {\n    async getTask() {\n      let taskRef = doc(taskColRef, this.taskId);\n      this.docRef = taskRef;\n      let task = await getDoc(this.docRef);\n      let taskData = task.data();\n      this.taskInfo.name = taskData.name;\n      this.taskInfo.description = taskData.description;\n      this.taskInfo.category = taskData.category;\n    },\n    async updateTask(){\n        await setDoc(this.docRef, this.taskInfo);\n        this.$router.push(\"/\");\n    }\n  },\n  created() {\n    let taskId = this.$route.params.taskId;\n    this.taskId = taskId;\n    this.getTask();\n  },\n};\n</script>\n\n<style>\n</style>\n"]},"metadata":{},"sourceType":"module"}